import { Part, ContentType } from '../../types';

export const part6Content: Part = {
  id: "p6",
  partTitle: "ุงูุจุงุจ ุงูุณุงุฏุณ: ุงูุญุงููุงุช (Containerization)",
  icon: "๐ณ",
  chapters: [
    {
        id: "p6_c1", chapterTitle: "ุงููุตู ุงูุฃูู: ุฃุณุงุณูุงุช Docker",
        sections: [
            {
              id: "p6_c1_s1",
              icon: "๐ฆ",
              title: "ุงููุณุชูู 125: ูุง ูู ุงูุญุงููุงุชุ Docker ููุงุจู ุงูุขูุงุช ุงูุงูุชุฑุงุถูุฉ",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุญุชู ูุฐู ุงููุญุธุฉุ ูููุง ุจุชุซุจูุช ูุฅุฏุงุฑุฉ ุชุทุจููุงุชูุง ูุจุงุดุฑุฉ ุนูู ูุธุงู ุงูุชุดุบูู ุงููุถูู (Host OS). ูุฐุง ุงูููุฌ ูุนููุ ูููู ูุฃุชู ูุน ุชุญุฏูุงุช ูุจูุฑุฉ: 'ุฌุญูู ุงูุงุนุชูุงุฏูุงุช'ุ ูุตุนูุจุฉ ุชูุฑุงุฑ ุงูุจูุฆุงุชุ ูููุต ุงูุนุฒู. ููุฏ ุญู ุนุงูู ุงูุญูุณุจุฉ ูุฐู ุงููุดููุฉ ููุฐ ูุชุฑุฉ ุทูููุฉ ูู ุฎูุงู ููููููู ุฑุฆูุณููู: ุงูุขูุงุช ุงูุงftุฑุงุถูุฉ (VMs) ูุงูุญุงููุงุช (Containers)." },
                { type: ContentType.HEADING4, text: "ุงูุทุฑููุฉ ุงููุฏููุฉ: ุงูุขูุงุช ุงูุงftุฑุงุถูุฉ (Virtual Machines - VMs)" },
                { type: ContentType.PARAGRAPH, text: "ุงูุขูุฉ ุงูุงftุฑุงุถูุฉ ูู ูุญุงูุงุฉ ูุงููุฉ ูุฌูุงุฒ ููุจููุชุฑ. ุฅููุง ุชููู ุจุชุดุบูู ูุธุงู ุชุดุบูู ุถูู (Guest OS) ูุงูู ุฎุงุต ุจูุง ููู ูุธุงู ุงูุชุดุบูู ุงููุถููุ ูุนุฒูู ุจูุงุณุทุฉ ุทุจูุฉ ุชุณูู 'Hypervisor'. ุชุฎูู ููุฒูู (ุงูุฎุงุฏู ุงููุงุฏู) ูุชูุณููู ุฅูู ุนุฏุฉ ููุงุฒู ูุณุชููุฉ ุชูุงููุง (VMs). ูู ููุฒู ูุฏูู ุฃุณุงุณุงุชู ุงูุฎุงุตุฉ (ููุงุฉ ูุธุงู ุงูุชุดุบูู)ุ ูุฌุฏุฑุงููุ ูุฃูุงุจูุจูุ ูููุฑุจุงุฆู. ูุฐุง ูููุฑ ุนุฒููุง ููููุง ุฌุฏูุงุ ูููู ูููู ููุบุงูุฉ ูู ุญูุซ ุงูููุงุฑุฏ. ูู VM ุชุณุชููู ูููุฉ ูุจูุฑุฉ ูู ุงูุฐุงูุฑุฉ ุงูุนุดูุงุฆูุฉ ููุณุงุญุฉ ุงููุฑุต ููุธุงู ุงูุชุดุบูู ุงูุถูู ุงูุฎุงุต ุจูุงุ ูุชุณุชุบุฑู ููุชูุง ุทูููุงู ููุจุฏุก." },
                { type: ContentType.HEADING4, text: "ุงูุทุฑููุฉ ุงูุญุฏูุซุฉ: ุงูุญุงููุงุช (Containers)" },
                { type: ContentType.PARAGRAPH, text: "ุงูุญุงููุฉ ุชุชุจุน ููุฌูุง ูุฎุชูููุง ูุฃูุซุฑ ููุงุกุฉ. ุจุฏูุงู ูู ูุญุงูุงุฉ ุฌูุงุฒ ููุจููุชุฑ ูุงููุ ุชููู ุงูุญุงููุงุช ุจุนุฒู ุงูุนูููุงุช ุนูู ูุณุชูู ูุธุงู ุงูุชุดุบูู. ุฌููุน ุงูุญุงููุงุช ุชุนูู ูุจุงุดุฑุฉ ููู ููุงุฉ ูุธุงู ุงูุชุดุบูู ุงููุถูู ูุชุดุงุฑููุง. ุชุฎูู ููุฒูู (ุงูุฎุงุฏู) ูุชูุณููู ุฅูู ุดูู (ุญุงููุงุช). ุชุดุชุฑู ุฌููุน ุงูุดูู ูู ููุณ ุงูุฃุณุงุณ (ููุงุฉ ุงููุถูู) ูุงูุจููุฉ ุงูุชุญุชูุฉ ุงูุฑุฆูุณูุฉ ูููุจููุ ููู ูู ุดูุฉ ููุง ุฌุฏุฑุงููุง ุงูุฎุงุตุฉุ ูุจุงุจูุง ุงูููููุ ููุณุงุญุชูุง ุงูุฎุงุตุฉ ุงููุนุฒููุฉ. ูุฐุง ูุนูู ุฃู ุงูุญุงููุงุช ุฎูููุฉ ุงููุฒู ุจุดูู ูุง ูุตุฏูุ ูุชุจุฏุฃ ูู ุฃุฌุฒุงุก ูู ุงูุซุงููุฉุ ูุชุณุชููู ููุงุฑุฏ ุฃูู ุจูุซูุฑ ูู VMs." },
                { type: ContentType.IMAGE_PLACEHOLDER, alt: "ููุงุฑูุฉ ูุฑุฆูุฉ ุจูู ุจููุฉ ุงูุขูุงุช ุงูุงftุฑุงุถูุฉ ูุงูุญุงููุงุช", width: 800, height: 450 },
                { type: ContentType.DEFINITION_LIST, definitionItems: [
                    { term: "Docker", definition: "ูู ุงูููุตุฉ ุงูุฑุงุฆุฏุฉ ูุฅูุดุงุก ูุชุดุบูู ูุฅุฏุงุฑุฉ ุงูุญุงููุงุช. ุฅูู ูููุฑ ุงูุฃุฏูุงุช ูุงููุธุงู ุงูุจูุฆู ุงูุฐู ุฌุนู ุชูููููุฌูุง ุงูุญุงููุงุช ุณููุฉ ุงููุตูู ูุดุงุฆุนุฉ." },
                    { term: "ุงูุตูุฑุฉ (Image)", definition: "ูู ุงููุงูุจ ุฃู ุงููุฎุทุท. ุฅููุง ุญุฒูุฉ ุฎุงููุฉ ููุงุจูุฉ ููุชูููุฐ ุชุญุชูู ุนูู ูู ูุง ููุฒู ูุชุดุบูู ุงูุชุทุจูู: ุงูููุฏุ ููุช ุงูุชุดุบูู (runtime)ุ ุงูููุชุจุงุชุ ูุชุบูุฑุงุช ุงูุจูุฆุฉุ ููููุงุช ุงูุชูููู. ุงูุตูุฑ ูุจููุฉ ูู ุทุจูุงุช ูููุฑุงุกุฉ ููุท." },
                    { term: "ุงูุญุงููุฉ (Container)", definition: "ูู ูุณุฎุฉ ููุฏ ุงูุชุดุบูู ูู ุงูุตูุฑุฉ. ุฅููุง ูุงุฆู (object) ูู ูุฆุฉ (class). ููููู ุชุดุบูู ุงูุนุฏูุฏ ูู ุงูุญุงููุงุช ูู ููุณ ุงูุตูุฑุฉุ ูู ูููุง ูุนุฒูู ุนู ุงูุขุฎุฑ." }
                ]},
                { type: ContentType.NOTE, title: "ุงููุดููุฉ ุงูุชู ูุญููุง Docker: 'ูููู ูุนูู ุนูู ุฌูุงุฒู!'", text: "ุงููุงุฆุฏุฉ ุงูุฃูุจุฑ ููุญุงููุงุช ูู ุฃููุง ุชุญู ูุดููุฉ 'ูููู ูุนูู ุนูู ุฌูุงุฒู!' ุงูููุงุณูููุฉ. ูุธุฑูุง ูุฃู ุงูุตูุฑุฉ ุชุญุชูู ุนูู ูู ุดูุกุ ูู ูุธุงู ุงูุชุดุบูู ุงูุฃุณุงุณู ุฅูู ุงูุงุนุชูุงุฏูุงุช ุงูุฏูููุฉุ ููููู ุฃู ุชููู ูุงุซููุง ุจูุณุจุฉ 100% ูู ุฃู ุงูุชุทุจูู ุงูุฐู ูุนูู ูู ุญุงููุฉ ุนูู ุฌูุงุฒ ุงูููุจููุชุฑ ุงููุญููู ุงูุฎุงุต ุจู ุณูุนูู ุจููุณ ุงูุทุฑููุฉ ุชูุงููุง ูู ุญุงููุฉ ุนูู ุฎุงุฏู ุงูุฅูุชุงุฌ. ุฅููุง ุชููุฑ ูุงุจููุฉ ููู ูุชูุฑุงุฑ ุบูุฑ ูุณุจููุฉ." },
              ]
            },
            {
              id: "p6_c1_s2",
              icon: "๐ง",
              title: "ุงููุณุชูู 126: ุชุซุจูุช Docker Engine ุนูู ุฃูุจููุชู",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุชุซุจูุช Docker ุนูู ุฃูุจููุชู ุนูููุฉ ูุจุงุดุฑุฉุ ูููู ูู ุงูููู ุงุชุจุงุน ุงูุชุนูููุงุช ุงูุฑุณููุฉ ูุถูุงู ุญุตููู ุนูู ุฃุญุฏุซ ุฅุตุฏุงุฑ ูู ูุณุชูุฏุนุงุช Docker ุงูุฎุงุตุฉุ ูููุณ ุงูุฅุตุฏุงุฑ ุงูุฐู ูุฏ ูููู ูุฏูููุง ูู ูุณุชูุฏุนุงุช ุฃูุจููุชู ุงูุงูุชุฑุงุถูุฉ." },
                { type: ContentType.HEADING4, text: "ุงูุฎุทูุงุช ุงููุงููุฉ ููุชุซุจูุช" },
                { type: ContentType.CODE_EXPLANATION, language: "bash", codeTitle: "ุชุซุจูุช Docker Engine", code: `# 1. ูู ุจุฅุฒุงูุฉ ุฃู ุฅุตุฏุงุฑุงุช ูุฏููุฉ
sudo apt-get remove docker docker-engine docker.io containerd runc

# 2. ูู ุจุฅุนุฏุงุฏ ุงููุณุชูุฏุน
sudo apt-get update
sudo apt-get install -y ca-certificates curl gnupg
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# 3. ูู ุจุชุซุจูุช Docker Engine
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin`, explanations: [
                    { lines: "2", explanation: "ูู ุงูุฌูุฏ ุฏุงุฆููุง ุงูุจุฏุก ุจุจูุฆุฉ ูุธููุฉ ุนู ุทุฑูู ุฅุฒุงูุฉ ุฃู ุญุฒู Docker ูุฏููุฉ." },
                    { lines: "5-11", explanation: "ูุฐู ุงูุณูุณูุฉ ูู ุงูุฃูุงูุฑ ุชููู ุจุชูููู `apt` ููุซูุฉ ูุชูุฒูู ุงูุญุฒู ูู ูุณุชูุฏุน Docker ุงูุฑุณูู. ุฅููุง ุชุถูู ููุชุงุญ GPG ุงูุฎุงุต ุจู Docker ูุชูุดุฆ ููู ูุตุฏุฑ ุฌุฏูุฏ." },
                    { lines: "14-15", explanation: "ุงูุขู ุจุนุฏ ุฃู ุชู ุชูููู ุงููุณุชูุฏุนุ ูููู ุจุชุซุจูุช ุฃุญุฏุซ ุงูุฅุตุฏุงุฑุงุช ูู ูุญุฑู Docker (`docker-ce`)ุ ููุงุฌูุฉ ุณุทุฑ ุงูุฃูุงูุฑ (`docker-ce-cli`)ุ ู `containerd` (ููุช ุชุดุบูู ุงูุญุงููุฉ)ุ ูุงูููููุงุช ุงูุฅุถุงููุฉ ุงูุญุฏูุซุฉ ูุซู `buildx` ู `docker-compose`." }
                ]},
                { type: ContentType.HEADING4, text: "ุงูุฅุฏุงุฑุฉ ูุบูุฑ ุฌุฐุฑู (Post-installation steps)" },
                { type: ContentType.PARAGRAPH, text: "ุจุดูู ุงูุชุฑุงุถูุ ูุง ูููู ุชุดุบูู ุฃูุงูุฑ Docker ุฅูุง ูู ูุจู ุงููุณุชุฎุฏู `root`. ูุฐุง ูุนูู ุฃูู ุณูุชุนูู ุนููู ูุชุงุจุฉ `sudo` ูุจู ูู ุฃูุฑ. ูุฅุตูุงุญ ุฐููุ ูุฌุจ ุนููู ุฅุถุงูุฉ ุงููุณุชุฎุฏู ุงูุฎุงุต ุจู ุฅูู ูุฌููุนุฉ `docker`." },
                { type: ContentType.CODE_EXPLANATION, language: "bash", codeTitle: "ุฅุถุงูุฉ ุงููุณุชุฎุฏู ุฅูู ูุฌููุนุฉ Docker", code: `sudo groupadd docker # May already exist
sudo usermod -aG docker $USER
newgrp docker # Apply group changes to the current shell`, explanations: [
                    { lines: "2", explanation: "ูุถูู ุงููุณุชุฎุฏู ุงูุญุงูู (`$USER`) ุฅูู ูุฌููุนุฉ `docker`." },
                    { lines: "3", explanation: "ูุชุทุจูู ุชุบููุฑุงุช ุงููุฌููุนุฉ ุฏูู ุงูุญุงุฌุฉ ุฅูู ุชุณุฌูู ุงูุฎุฑูุฌ ูุงูุนูุฏุฉุ ููููู ุงุณุชุฎุฏุงู `newgrp`. ุณุชุญุชุงุฌ ุฅูู ุงูููุงู ุจุฐูู ูุฑุฉ ูุงุญุฏุฉ ููุท ูู ุฌูุณุชู ุงูุญุงููุฉ." }
                ]},
                { type: ContentType.HEADING4, text: "ุงูุชุญูู ูู ุงูุชุซุจูุช" },
                { type: ContentType.PARAGRAPH, text: "ุฃุฎูุฑูุงุ ุชุญูู ูู ุฃู ูู ุดูุก ูุนูู ุนู ุทุฑูู ุชุดุบูู ุญุงููุฉ 'hello-world' ุงูุดููุฑุฉ:" },
                { type: ContentType.CODE_BLOCK, language: "bash", code: `docker run hello-world` },
                { type: ContentType.PARAGRAPH, text: "ุฅุฐุง ุฑุฃูุช ุฑุณุงูุฉ ุชุฑุญูุจ ูู Dockerุ ููุฐุง ูุนูู ุฃู ุงูุชุซุจูุช ุงูุฎุงุต ุจู ูุงุฌุญ ูุฃูู ุฌุงูุฒ ูุจุฏุก ุงุณุชุฎุฏุงู ุงูุญุงููุงุช." },
              ]
            },
            {
              id: "p6_c1_s3",
              icon: "โถ๏ธ",
              title: "ุงููุณุชูู 127: ุงูุฃูุงูุฑ ุงูุฃุณุงุณูุฉ ูู Docker",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุงูุขู ุจุนุฏ ุฃู ุชู ุชุซุจูุช Dockerุ ุญุงู ุงูููุช ูุชุนูู ุงูุฃูุงูุฑ ุงูุฃุณุงุณูุฉ ุงูุชู ุณุชุณุชุฎุฏููุง ูู ููู. ูุฐู ุงูุฃูุงูุฑ ูู ูุจูุงุช ุงูุจูุงุก ูุฅุฏุงุฑุฉ ุฏูุฑุฉ ุญูุงุฉ ุงูุญุงููุงุช ุงูุฎุงุตุฉ ุจู." },
                { type: ContentType.DEFINITION_LIST, definitionItems: [
                    { term: "docker run [OPTIONS] IMAGE [COMMAND]", definition: "ูุฐุง ูู ุงูุฃูุฑ ุงูุฃูุซุฑ ุฃูููุฉ. ูููู ุจุฅูุดุงุก ูุชุดุบูู ุญุงููุฉ ุฌุฏูุฏุฉ ูู ุตูุฑุฉ ูุญุฏุฏุฉ. ุฅุฐุง ูู ุชูู ุงูุตูุฑุฉ ููุฌูุฏุฉ ูุญูููุงุ ูุณูููู ุจุชูุฒูููุง ุชููุงุฆููุง ูู Docker Hub. ูุซุงู: `docker run -d -p 8080:80 --name my-nginx nginx`. `-d` (detached) ูุดุบู ุงูุญุงููุฉ ูู ุงูุฎูููุฉ. `-p 8080:80` (publish) ูุฑุจุท ุงููููุฐ 8080 ุนูู ุงููุถูู ุจุงููููุฐ 80 ูู ุงูุญุงููุฉ. `--name` ูุนุทู ุงูุญุงููุฉ ุงุณููุง." },
                    { term: "docker ps", definition: "ูุณุฑุฏ ุฌููุน ุงูุญุงููุงุช *ููุฏ ุงูุชุดุบูู*. ุงุณุชุฎุฏู `docker ps -a` ูุณุฑุฏ *ุฌููุน* ุงูุญุงููุงุชุ ุจูุง ูู ุฐูู ุชูู ุงูุชู ุชูููุช." },
                    { term: "docker stop [CONTAINER_ID or NAME]", definition: "ูููู ุญุงููุฉ ููุฏ ุงูุชุดุบูู ุจุฃูุงู ุนู ุทุฑูู ุฅุฑุณุงู ุฅุดุงุฑุฉ `SIGTERM`." },
                    { term: "docker start [CONTAINER_ID or NAME]", definition: "ูุจุฏุฃ ุญุงููุฉ ูุชูููุฉ." },
                    { term: "docker rm [CONTAINER_ID or NAME]", definition: "ูุญุฐู ุญุงููุฉ ูุชูููุฉ. ูุง ููููู ุญุฐู ุญุงููุฉ ููุฏ ุงูุชุดุบูู. ุงุณุชุฎุฏู `docker rm -f` ููุฑุถ ุงูุญุฐู." },
                    { term: "docker logs [CONTAINER_ID or NAME]", definition: "ูุนุฑุถ ุงููุฎุฑุฌุงุช ุงูููุงุณูุฉ (logs) ูู ุญุงููุฉ. ุงุณุชุฎุฏู `docker logs -f` ููุชุงุจุนุฉ ุงูุณุฌูุงุช ูู ุงูููุช ุงููุนูู." },
                    { term: "docker exec -it [CONTAINER_ID or NAME] [COMMAND]", definition: "ูุดุบู ุฃูุฑูุง *ุฏุงุฎู* ุญุงููุฉ ููุฏ ุงูุชุดุบูู. `-it` (interactive tty) ูุณูุญ ูู ุจูุชุญ ุฌูุณุฉ shell ุชูุงุนููุฉ. ูุซุงู: `docker exec -it my-nginx /bin/bash`. ูุฐุง ูุง ููุฏุฑ ุจุซูู ูุชุตุญูุญ ุงูุฃุฎุทุงุก." },
                    { term: "docker images", definition: "ูุณุฑุฏ ุฌููุน ุงูุตูุฑ ุงูููุฌูุฏุฉ ุนูู ุฌูุงุฒู ุงููุญูู." },
                    { term: "docker rmi [IMAGE_ID or NAME]", definition: "ูุญุฐู ุตูุฑุฉ ูู ุฌูุงุฒู ุงููุญูู." }
                ]},
              ]
            },
            {
              id: "p6_c1_s4",
              icon: "๐ฆ",
              title: "ุงููุณุชูู 128: ููู ุงูุตูุฑ (Images) ูุงูุญุงููุงุช (Containers)",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุงูุชุจุงุณ ูููููู ุงูุตูุฑ ูุงูุญุงููุงุช ูู ุฃูุฑ ุดุงุฆุน ูููุจุชุฏุฆูู. ุงุณุชุฎุฏุงู ุงูุชุดุจููุงุช ูู ุงูุจุฑูุฌุฉ ุงูุดูุฆูุฉ ูููู ุฃู ููุถุญ ุงูุฃูุฑ ุจุดูู ูุจูุฑ." },
                { type: ContentType.HEADING4, text: "ุงูุตูุฑุฉ (Image) ูู ุงููุฆุฉ (Class)" },
                { type: ContentType.PARAGRAPH, text: "ุงูุตูุฑุฉ ูู ูุฎุทุท ุซุงุจุช ูููุฑุงุกุฉ ููุท. ุฅููุง ุชุนุฑูู ููู ูุง ูุญุชุงุฌู ุชุทุจููู. ูุซู ุงููุฆุฉ ูู ูุบุฉ ุงูุจุฑูุฌุฉุ ุฅููุง ูุง ุชูุนู ุดูุฆูุง ุจููุฑุฏูุงุ ุฅููุง ูุฌุฑุฏ ูุฌููุนุฉ ูู ุงูุชุนูููุงุช ูุงููููุงุช." },
                { type: ContentType.HEADING4, text: "ุงูุญุงููุฉ (Container) ูู ุงููุงุฆู (Object)" },
                { type: ContentType.PARAGRAPH, text: "ุงูุญุงููุฉ ูู ูุณุฎุฉ ููุฏ ุงูุชุดุบูู ูู ุงูุตูุฑุฉ. ุฅููุง ุงููุงุฆู ุงูุฐู ุชู ุฅูุดุงุคู ูู ุงููุฆุฉ. ุนูุฏูุง ุชููู ุจุชุดุบูู `docker run`ุ ูุฃูุช ุชุฃุฎุฐ ูุฎุทุท ุงูุตูุฑุฉ ูุชูุดุฆ ููู ุนูููุฉ ุญูุฉ ููุนุฒููุฉ. ููููู ุฅูุดุงุก ุงูุนุฏูุฏ ูู ุงูุญุงููุงุช (ุงููุงุฆูุงุช) ูู ููุณ ุงูุตูุฑุฉ (ุงููุฆุฉ)ุ ูู ูููุง ูู ุญุงูุชู ุงูุฎุงุตุฉ ูุฐุงูุฑุชู ููุธุงู ูููุงุชู." },
                { type: ContentType.HEADING4, text: "ุทุจูุงุช ุงูุตูุฑุฉ ููุธุงู ูููุงุช ุงูุญุงููุฉ" },
                { type: ContentType.PARAGRAPH, text: "ุงูุตูุฑ ููุณุช ููููุง ูุงุญุฏูุง ูุจูุฑูุง. ุฅููุง ูุจููุฉ ูู ุณูุณูุฉ ูู ุงูุทุจูุงุช ูููุฑุงุกุฉ ููุท. ูู ุชุนูููุฉ ูู `Dockerfile` (ูุซู `RUN`, `COPY`) ุชูุดุฆ ุทุจูุฉ ุฌุฏูุฏุฉ. ุนูุฏูุง ุชููู ุจุฅูุดุงุก ุญุงููุฉุ ูุง ูููู Docker ุจูุณุฎ ุงูุตูุฑุฉ ุจุฃููููุง. ุจุฏูุงู ูู ุฐููุ ูุฅูู ูุถุน ุทุจูุฉ ุฑูููุฉ ูููุชุงุจุฉ ููู ุทุจูุงุช ุงูุตูุฑุฉ. ุฃู ุชุบููุฑุงุช ุชููู ุจูุง ุฏุงุฎู ุงูุญุงููุฉ (ูุซู ุฅูุดุงุก ููู) ุชุชู ูุชุงุจุชูุง ูู ูุฐู ุงูุทุจูุฉ ุงููุงุจูุฉ ูููุชุงุจุฉ. ูุฐุง ูุฌุนู ุฅูุดุงุก ุงูุญุงููุงุช ุณุฑูุนูุง ููุนุงูุงู ููุบุงูุฉ ูู ุงุณุชุฎุฏุงู ุงููุณุงุญุฉ." },
              ]
            },
            {
              id: "p6_c1_s5",
              icon: "โ๏ธ",
              title: "ุงููุณุชูู 129: ุงูุจุญุซ ุนู ุงูุตูุฑ ูุงุณุชุฎุฏุงููุง ูู Docker Hub",
              content: [
                { type: ContentType.PARAGRAPH, text: "Docker Hub ูู ุงูุณุฌู ุงูุนุงู ุงูุงูุชุฑุงุถู ููุญุงููุงุชุ ููู ูุดุจู GitHub ููุตูุฑ. ูุญุชูู ุนูู ููุงููู ุงูุตูุฑ ุงูุชู ุฃูุดุฃูุง ุงููุฌุชูุน ูุงูููุฑุฏูู ุงูุฑุณูููู. ููููู ุงูุนุซูุฑ ุนูู ุตูุฑ ููู ุดูุก ุชูุฑูุจูุงุ ูู ููุงุนุฏ ุงูุจูุงูุงุช (PostgreSQL, Redis) ุฅูู ุฎูุงุฏู ุงูููุจ (Nginx) ุฅูู ูุบุงุช ุงูุจุฑูุฌุฉ (Node, Python)." },
                { type: ContentType.HEADING4, text: "ุงูุจุญุซ ุนู ุงูุตูุฑ ูุณุญุจูุง" },
                { type: ContentType.CODE_EXPLANATION, language: "bash", codeTitle: "ุงูุจุญุซ ูุงูุณุญุจ", code: `# ุงุจุญุซ ุนู ุงูุตูุฑ ุงููุชุนููุฉ ุจู postgres
docker search postgres

# ูู ุจุชูุฒูู ุฃุญุฏุซ ุฅุตุฏุงุฑ ูู ุงูุตูุฑุฉ ุงูุฑุณููุฉ ูู postgres
docker pull postgres`, explanations: [
                    { lines: "2", explanation: "`docker search` ูุจุญุซ ูู Docker Hub ููุนุฑุถ ูุงุฆูุฉ ุจุงูุตูุฑ ุงููุทุงุจูุฉ ูุน ุฃูุตุงููุง." },
                    { lines: "5", explanation: "`docker pull` ูููู ุจุชูุฒูู ุงูุตูุฑุฉ ูุทุจูุงุชูุง ุฅูู ุฌูุงุฒู ุงููุญูู. `postgres` ูู ุงุฎุชุตุงุฑ ูู `postgres:latest`." }
                ]},
                { type: ContentType.NOTE, title: "ุงุณุชุฎุฏู ุฏุงุฆููุง ุงูุตูุฑ ุงูุฑุณููุฉ", text: "ุนูุฏ ุงูุจุญุซุ ุณุชุฑู ุงูุนุฏูุฏ ูู ุงูุตูุฑ. ุงุจุญุซ ุฏุงุฆููุง ุนู ุงูุนูุงูุฉ 'Official Image'. ูุฐู ุงูุตูุฑ ุชุชู ุตูุงูุชูุง ูู ูุจู ุงููุทูุฑูู ุงูุฃุตูููู ููุจุฑูุงูุฌ ุฃู Dockerุ ููู ูุถูููุฉ ูุชููู ูุญุฏุซุฉ ูุขููุฉ ููุจููุฉ ููููุง ูุฃูุถู ุงูููุงุฑุณุงุช." },
                { type: ContentType.HEADING4, text: "ุชุดุบูู ุญุงููุฉ PostgreSQL" },
                { type: ContentType.PARAGRAPH, text: "ุฏุนูุง ูุณุชุฎุฏู ุงูุตูุฑุฉ ุงูุชู ูููุง ุจุชูุฒูููุง ูุชุดุบูู ูุงุนุฏุฉ ุจูุงูุงุช PostgreSQL ูู ุญุงููุฉ. ุชุชุทูุจ ูุนุธู ุตูุฑ ููุงุนุฏ ุงูุจูุงูุงุช ุชูุฑูุฑ ุจุนุถ ูุชุบูุฑุงุช ุงูุจูุฆุฉ ูุชููุฆุชูุง." },
                { type: ContentType.CODE_BLOCK, language: "bash", code: `docker run -d --name my-postgres \\
  -e POSTGRES_PASSWORD=mysecretpassword \\
  -p 5432:5432 \\
  postgres` },
                { type: ContentType.PARAGRAPH, text: "ุจุฃูุฑ ูุงุญุฏุ ูุฏูู ุงูุขู ูุงุนุฏุฉ ุจูุงูุงุช PostgreSQL ูุงููุฉ ุชุนูู ูู ุจูุฆุฉ ูุนุฒููุฉ. ููููู ุงูุงุชุตุงู ุจูุง ูู ุชุทุจููู ุฃู ุฃุฏุงุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฎุงุตุฉ ุจู ุนูู `localhost:5432`. ูุฐุง ููุถุญ ููุฉ Docker ูู ุชุจุณูุท ุฅุนุฏุงุฏ ุงูุจูุฆุงุช ุงููุนูุฏุฉ." },
              ]
            }
        ]
    },
    {
        id: "p6_c2", chapterTitle: "ุงููุตู ุงูุซุงูู: ุจูุงุก ุงูุตูุฑ ูุน Dockerfile",
        sections: [
            {
              id: "p6_c2_s1",
              icon: "๐",
              title: "ุงููุณุชูู 130: ูุชุงุจุฉ ุฃูู Dockerfile ูุชุทุจูู Node.js",
              content: [
                { type: ContentType.PARAGRAPH, text: "ูู ุญูู ุฃู ุงุณุชุฎุฏุงู ุงูุตูุฑ ุงูุฌุงูุฒุฉ ุฑุงุฆุนุ ูุฅู ุงูููุฉ ุงูุญููููุฉ ูู Docker ุชุฃุชู ูู ุงููุฏุฑุฉ ุนูู ุชุบููู ุชุทุจููุงุชู ุงูุฎุงุตุฉ. `Dockerfile` ูู ููู ูุตู ุจุณูุท ูุญุชูู ุนูู ุงูุชุนูููุงุช ุฎุทูุฉ ุจุฎุทูุฉ ุงูุชู ูุญุชุงุฌูุง Docker ูุจูุงุก ุตูุฑุชู ุงููุฎุตุตุฉ. ุฅูู ูุตูุฉ ูุชุทุจููู." },
                { type: ContentType.HEADING4, text: "Dockerfile ุจุณูุท ูุชุทุจูู Express" },
                { type: ContentType.PARAGRAPH, text: "ูููุชุฑุถ ุฃู ูุฏูู ุชุทุจูู Express ุจุณูุท ูุน `package.json` ู `index.js`. ุฅููู `Dockerfile` ุฃุณุงุณู ูู:" },
                { type: ContentType.CODE_EXPLANATION, language: "dockerfile", codeTitle: "Dockerfile", code: `# ุงุณุชุฎุฏู ุตูุฑุฉ Node.js ุฑุณููุฉ ููุงุนุฏุฉ
FROM node:18-alpine

# ูู ุจุฅูุดุงุก ูุชุนููู ุฏููู ุงูุนูู ุฏุงุฎู ุงูุญุงููุฉ
WORKDIR /usr/src/app

# ุงูุณุฎ ูููุงุช package.json ู package-lock.json
COPY package*.json ./

# ูู ุจุชุซุจูุช ุงุนุชูุงุฏูุงุช ุงูุชุทุจูู
RUN npm ci --only=production

# ุงูุณุฎ ุจููุฉ ููุฏ ุงููุตุฏุฑ ููุชุทุจูู
COPY . .

# ุงูุดู ุงููููุฐ ุงูุฐู ูุนูู ุนููู ุงูุชุทุจูู
EXPOSE 3000

# ุญุฏุฏ ุงูุฃูุฑ ูุชุดุบูู ุงูุชุทุจูู
CMD [ "node", "index.js" ]`, explanations: [
                    { lines: "2", explanation: "`FROM`: ูู `Dockerfile` ูุฌุจ ุฃู ูุจุฏุฃ ุจู `FROM`. ุฅูู ูุญุฏุฏ ุงูุตูุฑุฉ ุงูุฃุณุงุณูุฉ ุงูุชู ุณุชุจูู ุนูููุง. `node:18-alpine` ูู ุตูุฑุฉ ุฑุณููุฉ ููุชุงุฒุฉ ูุฃููุง ุชุณุชุฎุฏู ุชูุฒูุนุฉ Alpine Linux ุงูุตุบูุฑุฉ ุฌุฏูุง." },
                    { lines: "5", explanation: "`WORKDIR`: ูุถุจุท ุฏููู ุงูุนูู ูุฃู ุชุนูููุงุช `RUN`, `CMD`, `COPY` ูุงุญูุฉ. ุฅุฐุง ูู ููู ุงูุฏููู ููุฌูุฏูุงุ ูุณูุชู ุฅูุดุงุคู." },
                    { lines: "8", explanation: "`COPY`: ููุณุฎ ุงููููุงุช ูู ูุธุงูู ุงููุญูู ุฅูู ูุธุงู ูููุงุช ุงูุญุงููุฉ." },
                    { lines: "11", explanation: "`RUN`: ูุดุบู ุฃูุฑูุง ุฏุงุฎู ุงูุญุงููุฉ ุฃุซูุงุก ุนูููุฉ ุงูุจูุงุก. ูุณุชุฎุฏูู ููุง ูุชุซุจูุช ุงูุงุนุชูุงุฏูุงุช." },
                    { lines: "14", explanation: "`COPY . .`: ููุณุฎ ุงูุขู ุจููุฉ ุงูููุฏ." },
                    { lines: "17", explanation: "`EXPOSE`: ููุซู ุงููููุฐ ุงูุฐู ูุณุชูุน ุนููู ุงูุชุทุจูู. ูุง ูููู ูุนูููุง ุจูุดุฑ ุงููููุฐ." },
                    { lines: "20", explanation: "`CMD`: ูููุฑ ุงูุฃูุฑ ุงูุงูุชุฑุงุถู ูุชุดุบูู ุงูุญุงููุฉ. ุณูุชู ุชุดุบูู ูุฐุง ุงูุฃูุฑ ุนูุฏูุง ุชุจุฏุฃ ุงูุญุงููุฉ." }
                ]},
                { type: ContentType.HEADING4, text: "ุจูุงุก ูุชุดุบูู ุงูุตูุฑุฉ" },
                { type: ContentType.CODE_EXPLANATION, language: "bash", codeTitle: "ุจูุงุก ูุชุดุบูู", code: `# ูู ุจุจูุงุก ุงูุตูุฑุฉ ููู ุจุชูููุฒูุง (tag)
docker build -t my-node-app .

# ูู ุจุชุดุบูู ุญุงููุฉ ูู ุตูุฑุชู ุงูุฌุฏูุฏุฉ
docker run -d -p 3000:3000 --name my-running-app my-node-app`, explanations: [
                    { lines: "2", explanation: "`docker build` ูู ุฃูุฑ ุงูุจูุงุก. `-t` (tag) ูุณูุญ ูู ุจุฅุนุทุงุก ุงูุตูุฑุฉ ุงุณููุง. `.` ูุฎุจุฑ Docker ุจุงูุจุญุซ ุนู `Dockerfile` ูู ุงูุฏููู ุงูุญุงูู." },
                    { lines: "5", explanation: "ูููู ุจุชุดุบูู ุญุงููุฉ ูู ุงูุตูุฑุฉ ุงูุชู ุจูููุงูุง ููุชูุ ููููู ุจูุดุฑ ุงููููุฐ 3000." }
                ]},
              ]
            },
            {
              id: "p6_c2_s2",
              icon: "๐",
              title: "ุงููุณุชูู 131: ูุชุงุจุฉ Dockerfile ูุชุทุจูู Python",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุงูููุท ูุจูุงุก ุตูุฑุฉ ุชุทุจูู Python ูุดุงุจู ุฌุฏูุงุ ูุน ุจุนุถ ุงูุงุฎุชูุงูุงุช ุงูุทูููุฉ ูู ููููุฉ ุชุซุจูุช ุงูุงุนุชูุงุฏูุงุช ูุชุดุบูู ุงูุชุทุจูู. ุณูุณุชุฎุฏู Gunicorn ูุชุดุบูู ุชุทุจูู Flask ุงูุฎุงุต ุจูุง ูู ุงูุญุงููุฉ." },
                { type: ContentType.CODE_EXPLANATION, language: "dockerfile", codeTitle: "Dockerfile ูุชุทุจูู Flask", code: `# ุงุณุชุฎุฏู ุตูุฑุฉ Python ุฑุณููุฉ ูุญููุฉ (slim)
FROM python:3.9-slim

# ุงุถุจุท ุฏููู ุงูุนูู
WORKDIR /app

# ุงูุณุฎ ููู ุงูุงุนุชูุงุฏูุงุช
COPY requirements.txt .

# ูู ุจุชุซุจูุช ุงูุงุนุชูุงุฏูุงุช
RUN pip install --no-cache-dir -r requirements.txt

# ุงูุณุฎ ุจููุฉ ููุฏ ุงููุตุฏุฑ
COPY . .

# ุงูุดู ุงููููุฐ ุงูุฐู ุณูุนูู ุนููู Gunicorn
EXPOSE 5000

# ุดุบูู ุงูุชุทุจูู ุจุงุณุชุฎุฏุงู Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "app:app"]`, explanations: [
                    { lines: "2", explanation: "ูุจุฏุฃ ุจุตูุฑุฉ Python ุฑุณููุฉ. ุงููุณุฎุฉ `slim` ูู ุฎูุงุฑ ุฌูุฏ ูุฃููุง ุฃุตุบุฑ ูู ุงููุณุฎุฉ ุงููุงููุฉ." },
                    { lines: "11", explanation: "ูุณุชุฎุฏู `pip` ูุชุซุจูุช ุงูุงุนุชูุงุฏูุงุช ูู `requirements.txt`. `--no-cache-dir` ูููุน pip ูู ุชุฎุฒูู ุงูุญุฒู ูุคูุชูุงุ ููุง ูุณุงุนุฏ ุนูู ุงูุญูุงุธ ุนูู ุญุฌู ุงูุตูุฑุฉ ุตุบูุฑูุง." },
                    { lines: "20", explanation: "ูุณุชุฎุฏู Gunicorn ูุฃูุฑ `CMD` ุงูุฎุงุต ุจูุง. `--bind 0.0.0.0:5000` ูุฎุจุฑ Gunicorn ุจุงูุงุณุชูุงุน ุนูู ุฌููุน ูุงุฌูุงุช ุงูุดุจูุฉ ุฏุงุฎู ุงูุญุงููุฉ ุนูู ุงููููุฐ 5000. ูุฐุง ุถุฑูุฑู ุญุชู ูุชููู Docker ูู ุชูุฌูู ุญุฑูุฉ ุงููุฑูุฑ ูู ุงููุถูู." }
                ]},
              ]
            },
            {
              id: "p6_c2_s3",
              icon: "โจ",
              title: "ุงููุณุชูู 132: ุฃูุถู ุงูููุงุฑุณุงุช ููุชุงุจุฉ Dockerfile",
              content: [
                { type: ContentType.PARAGRAPH, text: "ูุชุงุจุฉ `Dockerfile` ูุนูู ุฃูุฑ ุณูู. ูุชุงุจุฉ `Dockerfile` ูุนุงู ูุขูู ูุตุบูุฑ ูุชุทูุจ ุงุชุจุงุน ุจุนุถ ุฃูุถู ุงูููุงุฑุณุงุช ุงูุฑุฆูุณูุฉ." },
                { type: ContentType.HEADING4, text: "1. ุงูุงุณุชูุงุฏุฉ ูู ุงูุชุฎุฒูู ุงููุคูุช ููุทุจูุงุช (Layer Caching)" },
                { type: ContentType.PARAGRAPH, text: "ูููู Docker ุจุจูุงุก ุงูุตูุฑ ูู ุทุจูุงุชุ ููููู ุจุชุฎุฒูู ูู ุทุจูุฉ ูุคูุชูุง. ุฅุฐุง ูู ูุชุบูุฑ ุดูุก ูุคุซุฑ ุนูู ุทุจูุฉ ูุงุ ูุณูููู Docker ุจุฅุนุงุฏุฉ ุงุณุชุฎุฏุงู ุงููุณุฎุฉ ุงููุฎุจุฃุฉ ุจุฏูุงู ูู ุฅุนุงุฏุฉ ุจูุงุฆูุง. ููุงุณุชูุงุฏุฉ ูู ูุฐุงุ ูู ุจุชุฑุชูุจ ุชุนูููุงุชู ูู ุงูุฃูู ุชุบููุฑูุง ุฅูู ุงูุฃูุซุฑ ุชุบููุฑูุง." },
                { type: ContentType.PARAGRAPH, text: "**ุณูุก:**" },
                { type: ContentType.CODE_BLOCK, language: "dockerfile", code: `COPY . .
RUN npm install` },
                { type: ContentType.PARAGRAPH, text: "ููุงุ ุฃู ุชุบููุฑ ูู ุฃู ููู ููุฏ ุณูุจุทู ุฐุงูุฑุฉ ุงูุชุฎุฒูู ุงููุคูุช ูุทุจูุฉ `COPY` ููุฌุจุฑ `npm install` ุนูู ุงูุนูู ูุฑุฉ ุฃุฎุฑูุ ุญุชู ูู ูู ุชุชุบูุฑ ุงูุงุนุชูุงุฏูุงุช." },
                { type: ContentType.PARAGRAPH, text: "**ุฌูุฏ:**" },
                { type: ContentType.CODE_BLOCK, language: "dockerfile", code: `COPY package*.json ./
RUN npm ci
COPY . .` },
                { type: ContentType.PARAGRAPH, text: "ููุงุ `npm ci` ุณูุนูู ูุฑุฉ ุฃุฎุฑู ููุท ุฅุฐุง ุชุบูุฑ `package.json`. ุงูุชุบููุฑุงุช ูู ููุฏ ุงููุตุฏุฑ ุงูุฎุงุต ุจู ุณุชุคุฏู ููุท ุฅูู ุฅุจุทุงู ุทุจูุฉ `COPY . .` ุงูุฃุฎูุฑุฉุ ููุง ูุฌุนู ุนูููุงุช ุงูุจูุงุก ุฃุณุฑุน ุจูุซูุฑ." },
                { type: ContentType.HEADING4, text: "2. ุงูุจูุงุก ูุชุนุฏุฏ ุงููุฑุงุญู (Multi-stage Builds)" },
                { type: ContentType.PARAGRAPH, text: "ูุฐู ูู ุฃูู ุชูููุฉ ูุฅูุดุงุก ุตูุฑ ุฅูุชุงุฌ ุตุบูุฑุฉ ูุขููุฉ. ุงูููุฑุฉ ูู ุงุณุชุฎุฏุงู ูุฑุญูุฉ ุจูุงุก ูุงุญุฏุฉ ุชุญุชูู ุนูู ุฌููุน ุฃุฏูุงุช ุงูุชุทููุฑ ูุงูุงุนุชูุงุฏูุงุช ุงููุงุฒูุฉ ูุจูุงุก ุชุทุจูููุ ุซู ูุณุฎ ุงููุทุน ุงูุฃุซุฑูุฉ ุงููุจููุฉ ููุท ุฅูู ูุฑุญูุฉ ุฅูุชุงุฌ ููุงุฆูุฉ ูุธููุฉ." },
                { type: ContentType.CODE_EXPLANATION, language: "dockerfile", codeTitle: "Dockerfile ูุชุนุฏุฏ ุงููุฑุงุญู ูู React", code: `# ุงููุฑุญูุฉ 1: ูุฑุญูุฉ ุงูุจูุงุก
FROM node:18 as builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# ุงููุฑุญูุฉ 2: ูุฑุญูุฉ ุงูุฅูุชุงุฌ
FROM nginx:1.25-alpine
# ุงูุณุฎ ุงูุฃุตูู ุงููุจููุฉ ูู ูุฑุญูุฉ ุงูุจูุงุก
COPY --from=builder /app/build /usr/share/nginx/html
# ุงูุณุฎ ุชูููู Nginx ุงููุฎุตุต (ุงุฎุชูุงุฑู)
COPY nginx.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]`, explanations: [
                    { lines: "2", explanation: "ูุจุฏุฃ ุจุตูุฑุฉ Node ูุงููุฉ ููุทูู ุนูููุง ุงุณู `builder`." },
                    { lines: "7", explanation: "ูููู ุจุชุดุบูู `npm run build`ุ ุงูุฐู ููุดุฆ ูุฌูุฏ `/app/build` ุจุงููููุงุช ุงูุซุงุจุชุฉ ุงููุญุณูุฉ." },
                    { lines: "10", explanation: "ูุจุฏุฃ ูู ุฌุฏูุฏ ุจุตูุฑุฉ `nginx` ุตุบูุฑุฉ ุฌุฏูุง. ูุง ุดูุก ูู ูุฑุญูุฉ ุงูุจูุงุก (Node.jsุ `node_modules`) ููุฌูุฏ ููุง." },
                    { lines: "12", explanation: "ูุฐุง ูู ุงูุณุญุฑ. `COPY --from=builder` ูุณูุญ ููุง ุจูุณุฎ ุงููููุงุช ูู ูุฑุญูุฉ ุณุงุจูุฉ. ููุณุฎ ููุท ุงููุฌูุฏ ุงููุจูู ุงูููุงุฆู ุฅูู ุฏููู Nginx." },
                    { lines: "18", explanation: "ุงููุชูุฌุฉ ุงูููุงุฆูุฉ ูู ุตูุฑุฉ ุตุบูุฑุฉ ุฌุฏูุง ุชุญุชูู ููุท ุนูู Nginx ูุงููููุงุช ุงูุซุงุจุชุฉุ ุจุฏูู ุฃู ูู ููุถู ุจูุฆุฉ ุงูุจูุงุก." }
                ]},
              ]
            },
            {
              id: "p6_c2_s4",
              icon: "๊ฒน",
              title: "ุงููุณุชูู 133: ููู ูุฅุฏุงุฑุฉ ุทุจูุงุช ุงูุตูุฑ",
              content: [
                { type: ContentType.PARAGRAPH, text: "ููุง ุฐูุฑูุงุ ุงูุตูุฑ ูุจููุฉ ูู ุทุจูุงุช. ููู ููููุฉ ุนูู ูุฐู ุงูุทุจูุงุช ูููู ุฃู ูุณุงุนุฏู ุนูู ุชุญุณูู ุตูุฑู ุจุดูู ุฃูุจุฑ." },
                { type: ContentType.HEADING4, text: "ุนุฑุถ ุทุจูุงุช ุงูุตูุฑุฉ" },
                { type: ContentType.PARAGRAPH, text: "ููููู ูุญุต ุงูุทุจูุงุช ุงูุชู ุชุชููู ูููุง ุงูุตูุฑุฉ ุจุงุณุชุฎุฏุงู ุงูุฃูุฑ `docker history`:" },
                { type: ContentType.CODE_BLOCK, language: "bash", code: `docker history my-node-app` },
                { type: ContentType.PARAGRAPH, text: "ุณููุธูุฑ ูู ูุฐุง ูู ุทุจูุฉุ ูุงูุฃูุฑ ุงูุฐู ุฃูุดุฃูุงุ ูุญุฌููุง. ุณุชูุงุญุธ ุฃู ุงูุชุนูููุงุช ูุซู `RUN` ูููู ุฃู ุชุฎูู ุทุจูุงุช ูุจูุฑุฉ." },
                { type: ContentType.HEADING4, text: "ุชูููู ุนุฏุฏ ุงูุทุจูุงุช" },
                { type: ContentType.PARAGRAPH, text: "ูู ุญูู ุฃู ุงูุชุฎุฒูู ุงููุคูุช ููุทุจูุงุช ุฌูุฏุ ูุฅู ูุฌูุฏ ุนุฏุฏ ูุจูุฑ ุฌุฏูุง ูู ุงูุทุจูุงุช ูููู ุฃู ูุจุทุฆ ุงูุฃููุฑ ููููุงู. ููููู ุฏูุฌ ุฃูุงูุฑ `RUN` ุงููุชุนุฏุฏุฉ ูู ุทุจูุฉ ูุงุญุฏุฉ ุจุงุณุชุฎุฏุงู `&&`." },
                { type: ContentType.CODE_BLOCK, language: "dockerfile", code: `# ุจุฏูุงู ูู:
# RUN apt-get update
# RUN apt-get install -y curl

# ุงูุนู ูุฐุง:
RUN apt-get update && apt-get install -y curl \\
    && rm -rf /var/lib/apt/lists/*` },
                { type: ContentType.PARAGRAPH, text: "ูุงุญุธ `rm -rf /var/lib/apt/lists/*`. ูู ุงูููู ุชูุธูู ุฃู ูููุงุช ูุคูุชุฉ ุชู ุฅูุดุงุคูุง ุจูุงุณุทุฉ ุฃูุฑ ูุง ุฏุงุฎู ููุณ ุชุนูููุฉ `RUN`ุ ูุฅูุง ูุณูุชู ุชุถููููุง ูู ุงูุทุจูุฉ ุฅูู ุงูุฃุจุฏุ ุญุชู ูู ููุช ุจุญุฐููุง ูู ุทุจูุฉ ูุงุญูุฉ." },
              ]
            },
            {
              id: "p6_c2_s5",
              icon: "๐ค",
              title: "ุงููุณุชูู 134: ูุดุฑ ุงูุตูุฑ ุฅูู ุณุฌู ุฎุงุต (Private Registry)",
              content: [
                { type: ContentType.PARAGRAPH, text: "Docker Hub ุฑุงุฆุน ููุตูุฑ ุงูุนุงูุฉุ ูููู ุจุงููุณุจุฉ ูุชุทุจููุงุชู ุงูุฎุงุตุฉุ ูุฃูุช ุชุฑูุฏ ุณุฌููุง ุฎุงุตูุง (Private Registry). ูููุฑ ูู ูู GitHub ู GitLab ู Docker Hub ูุฌููุน ูุฒูุฏู ุงูุฎุฏูุงุช ุงูุณุญุงุจูุฉ ุณุฌูุงุช ุญุงููุงุช ุฎุงุตุฉ." },
                { type: ContentType.HEADING4, text: "ุณูุฑ ุนูู ุงููุดุฑ" },
                { type: ContentType.PARAGRAPH, text: "ุจุงุณุชุฎุฏุงู GitHub Container Registry (GHCR) ููุซุงู:" },
                { type: ContentType.CODE_EXPLANATION, language: "bash", codeTitle: "ุงููุดุฑ ุฅูู GHCR", code: `# 1. ูู ุจุชุณุฌูู ุงูุฏุฎูู ุฅูู ุณุฌู GitHub (ุชุญุชุงุฌ ุฅูู ุฑูุฒ ูุตูู ุดุฎุตู)
echo "$CR_PAT" | docker login ghcr.io -u YOUR_GITHUB_USERNAME --password-stdin

# 2. ูู ุจุชูููุฒ ุตูุฑุชู ุจุงูุงุณู ุงูุตุญูุญ
docker tag my-node-app:latest ghcr.io/YOUR_GITHUB_USERNAME/my-node-app:latest

# 3. ูู ุจุฏูุน ุงูุตูุฑุฉ
docker push ghcr.io/YOUR_GITHUB_USERNAME/my-node-app:latest`, explanations: [
                    { lines: "2", explanation: "ูููู ุจุชุณุฌูู ุงูุฏุฎูู ุฅูู ุงูุณุฌู. ูู ุฃูุถู ุงูููุงุฑุณุงุช ุงุณุชุฎุฏุงู ุฑูุฒ ูุตูู ุดุฎุตู (Personal Access Token) ูุชูุฑูุฑู ุนุจุฑ `stdin` ุจุฏูุงู ูู ูุชุงุจุฉ ูููุฉ ุงููุฑูุฑ ูู ุงูุทุฑููุฉ." },
                    { lines: "5", explanation: "ูุจู ุฃู ุชุชููู ูู ุฏูุน ุตูุฑุฉุ ูุฌุจ ุนููู ุชูููุฒูุง ุจุงูุงุณู ุงููุงูู ููุณุฌู. ุงูุชูุณูู ูู `REGISTRY_URL/USERNAME/IMAGE_NAME:TAG`." },
                    { lines: "8", explanation: "`docker push` ูููู ุจุชุญููู ุงูุตูุฑุฉ ูุทุจูุงุชูุง ุฅูู ุงูุณุฌู ุงูุฎุงุต. ูููู ุงูุขู ุณุญุจูุง ุนูู ุฃู ุฎุงุฏู ูุฏูู ุจูุงูุงุช ุงูุงุนุชูุงุฏ ุงูุตุญูุญุฉ." }
                ]},
                { type: ContentType.NOTE, title: "ุงูุชูุงูู ูุน CI/CD", text: "ูุฐุง ูู ุงูููุงู ุงูุฐู ูุชุฃูู ููู ุฎุท ุฃูุงุจูุจ CI/CD. ููููู ุฅุถุงูุฉ ุฎุทูุฉ ุฅูู ุณูุฑ ุนูู GitHub Actions ุงูุฎุงุต ุจู ุชููู ุจุจูุงุก ุงูุตูุฑุฉุ ูุชุณุฌูู ุงูุฏุฎูู ุฅูู GHCR ุจุงุณุชุฎุฏุงู ุฑูุฒ ูููุฒ ูุคูุชุ ูุฏูุน ุงูุตูุฑุฉ ุชููุงุฆููุง ุจุนุฏ ูุฌุงุญ ุงูุงุฎุชุจุงุฑุงุช. ูุฐุง ูุคุชูุช ุจุงููุงูู ุนูููุฉ ุชุณููู ุจุฑุงูุฌู." }
              ]
            }
        ]
    },
    {
        id: "p6_c3", chapterTitle: "ุงููุตู ุงูุซุงูุซ: ุฅุฏุงุฑุฉ ุงูุชุทุจููุงุช ูุชุนุฏุฏุฉ ุงูุญุงููุงุช",
        sections: [
            {
              id: "p6_c3_s1",
              icon: "๐งฉ",
              title: "ุงููุณุชูู 135: ููุฏูุฉ ุฅูู Docker Compose",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุจูููุง ูุนูู ุนูู ุชุทุจููุงุช ุฃูุซุฑ ุชุนููุฏูุงุ ูุงุฏุฑูุง ูุง ูุนูู ูุน ุญุงููุฉ ูุงุญุฏุฉ. ุชุทุจูู ููุจ ูููุฐุฌู ูุฏ ูุชุทูุจ ุญุงููุฉ ูุชุทุจูู ุงูููุจ ููุณูุ ูุญุงููุฉ ููุงุนุฏุฉ ุงูุจูุงูุงุชุ ูุฑุจูุง ุญุงููุฉ ูู Nginx ููููู ุนูุณู. ุฅุฏุงุฑุฉ ุฏูุฑุฉ ุญูุงุฉ ูู ูุฐู ุงูุญุงููุงุช ูุฏูููุง ุจุงุณุชุฎุฏุงู `docker run` ู `docker stop` ูุตุจุญ ุฃูุฑูุง ูุฑูููุง ุจุณุฑุนุฉ." },
                { type: ContentType.PARAGRAPH, text: "Docker Compose ูู ุฃุฏุงุฉ ูุญู ูุฐู ุงููุดููุฉ ุจุงูุถุจุท. ุฅููุง ุชุณูุญ ูู ุจุชุนุฑูู ูุฅุฏุงุฑุฉ ุชุทุจููุงุช Docker ูุชุนุฏุฏุฉ ุงูุญุงููุงุช ูู ููู YAML ูุงุญุฏ. ุจุงุณุชุฎุฏุงู ุฃูุฑ ูุงุญุฏุ `docker-compose up`ุ ููููู ุฅูุดุงุก ูุจุฏุก ุฌููุน ุงูุฎุฏูุงุช ูู ุชููููู. ูุจุฃูุฑ ูุงุญุฏุ `docker-compose down`ุ ููููู ุฅููุงู ูุญุฐู ุฌููุน ุงูุญุงููุงุช ูุงูุดุจูุงุช ุงููุชุนููุฉ." },
              ]
            },
            {
              id: "p6_c3_s2",
              icon: "๐",
              title: "ุงููุณุชูู 136: ูุชุงุจุฉ ููู docker-compose.yml ูุชุทุจูู ููุจ ููุงุนุฏุฉ ุจูุงูุงุช",
              content: [
                { type: ContentType.PARAGRAPH, text: "ููู `docker-compose.yml` ูู ููุจ Docker Compose. ูููู ุจุฅูุดุงุก ููู ูุญุฏุฏ ุฎุฏูุฉ ุชุทุจูู Node.js (`web`) ูุฎุฏูุฉ ูุงุนุฏุฉ ุจูุงูุงุช PostgreSQL (`db`)." },
                { type: ContentType.CODE_EXPLANATION, language: "yaml", codeTitle: "docker-compose.yml", code: `version: '3.8'

services:
  web:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/mydb
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mydb

volumes:
  db-data:`, explanations: [
                    { lines: "1", explanation: "ูุญุฏุฏ ุฅุตุฏุงุฑ ุตูุบุฉ ููู Compose." },
                    { lines: "3", explanation: "ูุจุฏุฃ ูู ุชุนุฑูู ุฎุฏูุงุชูุง ุงููุฑุฏูุฉ." },
                    { lines: "5", explanation: "`build: .` ูุฎุจุฑ Compose ุจุจูุงุก ุตูุฑุฉ ูู `Dockerfile` ูู ุงูุฏููู ุงูุญุงูู." },
                    { lines: "7", explanation: "ููุดุฑ ุงููููุฐ 3000 ูู ุงูุญุงููุฉ ุฅูู ุงููููุฐ 3000 ุนูู ุงููุถูู." },
                    { lines: "9", explanation: "ูุฑุจุท ุงูุฏููู ุงูุญุงูู ุนูู ุงููุถูู ุจุงูุฏููู ุฏุงุฎู ุงูุญุงููุฉุ ููู ุฃูุฑ ุฑุงุฆุน ููุชุทููุฑ ุงููุจุงุดุฑ." },
                    { lines: "11", explanation: "ููุฑุฑ ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุฅูู ุงูุญุงููุฉ. ูุงุญุธ ููู ูููููุง ุงูุฅุดุงุฑุฉ ุฅูู ุฎุฏูุฉ `db` ุจุงุณู ุงููุถูู ุงูุฎุงุต ุจูุง." },
                    { lines: "13", explanation: "`depends_on` ูุฎุจุฑ Compose ุจุจุฏุก ุฎุฏูุฉ `db` ูุจู ุฎุฏูุฉ `web`." },
                    { lines: "16", explanation: "ููุง ูุณุชุฎุฏู ุตูุฑุฉ PostgreSQL ุฌุงูุฒุฉ ูู Docker Hub." },
                    { lines: "18", explanation: "ูุณุชุฎุฏู ูุญุฏุฉ ุชุฎุฒูู ูุณูุงุฉ ููุญูุงุธ ุนูู ุจูุงูุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช." },
                    { lines: "25", explanation: "ูุนูู ุนู ูุญุฏุฉ ุงูุชุฎุฒูู ุงููุณูุงุฉ ุงูุฎุงุตุฉ ุจูุง." }
                ]},
              ]
            },
            {
              id: "p6_c3_s3",
              icon: "๐ธ๏ธ",
              title: "ุงููุณุชูู 137: ููู ุดุจูุงุช Docker Compose",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุฃุญุฏ ุฃููู ุฌูุงูุจ Docker Compose ูู ููููุฉ ุชุนุงููู ูุน ุงูุดุจูุงุช. ุนูุฏูุง ุชููู ุจุชุดุบูู `docker-compose up`ุ ูุฅูู ูููู ุชููุงุฆููุง ุจุฅูุดุงุก ุดุจูุฉ ุงูุชุฑุงุถูุฉ ูุฎุตุตุฉ ูุชุทุจููู ููุฑุจุท ุฌููุน ุงูุญุงููุงุช ุงููุญุฏุฏุฉ ูู ุงูููู ุจูุง." },
                { type: ContentType.HEADING4, text: "ุงูุงูุชุดุงู ุงููุงุฆู ุนูู DNS" },
                { type: ContentType.PARAGRAPH, text: "ุงูุฃูู ูู ุฐููุ ุฃู Docker ูุฏูู ุฎุงุฏู DNS ูุฏูุฌ ููุฐู ุงูุดุจูุฉ. ูุฐุง ูุนูู ุฃู ูู ุญุงููุฉ ูููููุง ุงูุนุซูุฑ ุนูู ุฃู ุญุงููุฉ ุฃุฎุฑู ูุงูุงุชุตุงู ุจูุง ุจุงุณุชุฎุฏุงู ุงุณู ุงูุฎุฏูุฉ ุงูุฎุงุต ุจูุง ููุง ูู ูุญุฏุฏ ูู ููู `docker-compose.yml`. ูุฐุง ูู ุงูุณุจุจ ูู ุฃู `DATABASE_URL` ุงูุฎุงุต ุจูุง ููููู ุงุณุชุฎุฏุงู `db` ูุงุณู ูุถูู: `postgres://user:password@db:5432/mydb`. ุชููู ุงูุญุงููุฉ `web` ุจุฅุฌุฑุงุก ุจุญุซ DNS ุนู `db`ุ ููููู Docker ุจุญููุง ุฅูู ุนููุงู IP ุงูุฏุงุฎูู ุงูุตุญูุญ ููุญุงููุฉ `db`. ูุฐุง ูุฌุนู ุงูุชูููู ูุงุจูุงู ููููู ููุณุชููุงู ุนู ุนูุงููู IP ุงูุฏุงุฎููุฉ ุงูุชู ูุฏ ุชุชุบูุฑ." },
              ]
            },
            {
              id: "p6_c3_s4",
              icon: "๐พ",
              title: "ุงููุณุชูู 138: ุฅุฏุงุฑุฉ ุงูุจูุงูุงุช ูุน Docker Volumes",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุงูุญุงููุงุช ุณุฑูุนุฉ ุงูุฒูุงู. ุฅุฐุง ููุช ุจุญุฐู ุญุงููุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช (`docker rm my-postgres`)ุ ูุณุชููุฏ ุฌููุน ุจูุงูุงุชู. Docker Volumes ูู ุงูุขููุฉ ุงูููุถูุฉ ููุญูุงุธ ุนูู ุงูุจูุงูุงุช ุงูุชู ุชู ุฅูุดุงุคูุง ุจูุงุณุทุฉ ุงูุญุงููุงุช." },
                { type: ContentType.HEADING4, text: "ูุง ูู Volumesุ" },
                { type: ContentType.PARAGRAPH, text: "ูุญุฏุฉ ุงูุชุฎุฒูู ูู ุฏููู ุฎุงุต ุนูู ุงูุฌูุงุฒ ุงููุถูู ุชุชู ุฅุฏุงุฑุชู ุจูุงุณุทุฉ Docker. ุนูุฏูุง ุชููู ุจุฑุจุท ูุญุฏุฉ ุชุฎุฒูู ุจุญุงููุฉ (ูุซู ุฑุจุท `db-data` ุจู `/var/lib/postgresql/data`)ุ ูุฅู ุฃู ุดูุก ุชูุชุจู ุงูุญุงููุฉ ูู ูุฐุง ุงููุณุงุฑ ูุชู ุญูุธู ูุนูููุง ูู ุฏููู ูุญุฏุฉ ุงูุชุฎุฒูู ุนูู ุงููุถูู. ุงูุฃูู ูู ุฐููุ ุฃู ุฏูุฑุฉ ุญูุงุฉ ูุญุฏุฉ ุงูุชุฎุฒูู ูููุตูุฉ ุชูุงููุง ุนู ุฏูุฑุฉ ุญูุงุฉ ุงูุญุงููุฉ. ููููู ุญุฐู ุงูุญุงููุฉ ูุชุฑููุชูุง ูุฅุนุงุฏุฉ ุฅูุดุงุฆูุงุ ูุณุชุธู ูุญุฏุฉ ุงูุชุฎุฒูู ููุฌูุฏุฉ. ุนูุฏูุง ุชููู ุจุฑุจุท ุงูุญุงููุฉ ุงูุฌุฏูุฏุฉ ุจููุณ ูุญุฏุฉ ุงูุชุฎุฒููุ ูุฅููุง ุณุชูุชูุท ุฌููุน ุงูุจูุงูุงุช ุงููุฏููุฉ." },
              ]
            },
            {
              id: "p6_c3_s5",
              icon: "โ๏ธ",
              title: "ุงููุณุชูู 139: ุชูุณูุน ูุทุงู ุงูุฎุฏูุงุช ูุน Docker Compose",
              content: [
                { type: ContentType.PARAGRAPH, text: "Docker Compose ูุฌุนู ูู ุงูุณูู ุชุดุบูู ูุณุฎ ูุชุนุฏุฏุฉ ูู ุฎุฏูุฉ ูุนููุฉ (ุนุงุฏุฉู ุฎุฏูุฉ ุชุทุจูู ุงูููุจ ุงูุฎุงุตุฉ ุจู) ูุชูุฒูุน ุงูุญูู." },
                { type: ContentType.CODE_EXPLANATION, language: "bash", codeTitle: "ุชูุณูุน ูุทุงู ุฎุฏูุฉ ุงูููุจ", code: `docker-compose up -d --scale web=3`, explanations: [
                    { lines: "1", explanation: "ูุฐุง ุงูุฃูุฑ ุณูููู ุจุจุฏุก ุฎุฏูุฉ `db` ูุงุญุฏุฉ (ููุง ูู ูุญุฏุฏ)ุ ูููู ุณูููู ุจุจุฏุก ุซูุงุซ ูุณุฎ ูู ุฎุฏูุฉ `web`. ุณูุชู ุชุณููุชูู ุชููุงุฆููุงุ ุนูู ุณุจูู ุงููุซุงู `myproject_web_1`, `myproject_web_2`, `myproject_web_3`." }
                ]},
                { type: ContentType.PARAGRAPH, text: "ูุชูุฒูุน ุญุฑูุฉ ุงููุฑูุฑ ุจูู ูุฐู ุงููุณุฎ ุงูุซูุงุซุ ุณุชุญุชุงุฌ ุฅูู ูููู ุนูุณู ูุซู Nginx ุฃู Traefik ูุฌูุณ ุฃูุงููุง. ููุน ุฐููุ ูุฅู Docker Compose ููุณู ูุง ูููุฑ ููุงุฒูุฉ ุชุญููู ูุฏูุฌุฉ ููุทูุจุงุช ุงููุงุฑุฏุฉ. ูุฐุง ูู ุฃุญุฏ ุงููุฌุงูุงุช ุงูุชู ูุชุฃูู ูููุง Kubernetes." },
              ]
            }
        ]
    },
    {
        id: "p6_c4", chapterTitle: "ุงููุตู ุงูุฑุงุจุน: ููุฏูุฉ ุฅูู Kubernetes",
        sections: [
            {
              id: "p6_c4_s1",
              icon: "๐ค",
              title: "ุงููุณุชูู 140: ููุงุฐุง Kubernetesุ ุงููุดุงูู ุงูุชู ูุญููุง",
              content: [
                { type: ContentType.PARAGRAPH, text: "Docker Compose ุฑุงุฆุน ููุชุทููุฑ ุงููุญูู ููุนูููุงุช ุงููุดุฑ ุงูุจุณูุทุฉ ุนูู ุฎุงุฏู ูุงุญุฏ. ูููู ุนูุฏูุง ุชุจุฏุฃ ูู ุงูุชูููุฑ ูู ุงูุฅูุชุงุฌ ุนูู ูุทุงู ูุงุณุนุ ุชุธูุฑ ูุฌููุนุฉ ุฌุฏูุฏุฉ ูู ุงููุดุงูู:" },
                { type: ContentType.LIST_UNORDERED, items: [
                    "<strong>ุฅุฏุงุฑุฉ ุฎูุงุฏู ูุชุนุฏุฏุฉ (Multi-node):</strong> ููู ุชุฏูุฑ ุงูุญุงููุงุช ุนุจุฑ ุฃุณุทูู ูู 5 ุฃู 10 ุฃู 100 ุฎุงุฏูุ",
                    "<strong>ุงูุชูุงูุฑ ุงูุนุงูู (High Availability):</strong> ูุงุฐุง ูุญุฏุซ ุฅุฐุง ุชุนุทู ุฎุงุฏู ูุงููุ ููู ุชุนูุฏ ุชุดุบูู ุงูุญุงููุงุช ุงูุชู ูุงูุช ุนููู ุชููุงุฆููุง ุนูู ุฎุงุฏู ุณููู ุขุฎุฑุ",
                    "<strong>ุงูุชูุณุน ุงูุฐูู (Intelligent Scaling):</strong> ููู ููููู ุชูุณูุน ูุทุงู ุชุทุจููู ุชููุงุฆููุง ูุฃุนูู ููุฃุณูู ุจูุงุกู ุนูู ุงุณุชุฎุฏุงู ูุญุฏุฉ ุงููุนุงูุฌุฉ ุงููุฑูุฒูุฉุ",
                    "<strong>ุงูุชุดุงู ุงูุฎุฏูุงุช ูุงูุดุจูุงุช:</strong> ููู ูููู ููุญุงููุงุช ุฃู ุชูุชุดู ุจุนุถูุง ุงูุจุนุถ ูุชุชูุงุตู ุจุดูู ุขูู ุนุจุฑ ุฎูุงุฏู ูุฎุชููุฉุ"
                ]},
                { type: ContentType.PARAGRAPH, text: "Kubernetes (ูููุทู Kube-r-net-eesุ ูุบุงูุจูุง ูุง ูุฎุชุตุฑ ุจู K8s) ูู ูุธุงู ุชูุณูู ุญุงููุงุช (Container Orchestration) ููุชูุญ ุงููุตุฏุฑ ุชู ุฅูุดุงุคู ูู ุงูุฃุตู ุจูุงุณุทุฉ Google. ูุธููุชู ูู ุฃุชูุชุฉ ูุดุฑ ุงูุญุงููุงุช ูุชูุณูุน ูุทุงููุง ูุฅุฏุงุฑุชูุง. ุฅูู ูุญู ุงููุดุงูู ุงููุฐููุฑุฉ ุฃุนูุงู ูุฃูุซุฑ ูู ุฐูู ุจูุซูุฑ. ููุฑ ููู ูู 'ูุธุงู ุชุดุบูู ููุฑูุฒ ุงูุจูุงูุงุช'." },
              ]
            },
            {
              id: "p6_c4_s2",
              icon: "๐๏ธ",
              title: "ุงููุณุชูู 141: ุงูุจููุฉ ุงูุฃุณุงุณูุฉ ูู Kubernetes",
              content: [
                { type: ContentType.PARAGRAPH, text: "Kubernetes ูุฏูู ูุฌููุนุฉ ูู ุงูููุงููู ุงูุฃุณุงุณูุฉ ุงูุชู ุชุดูู ูุจูุงุช ุงูุจูุงุก ุงูุฎุงุตุฉ ุจู:" },
                { type: ContentType.DEFINITION_LIST, definitionItems: [
                    { term: "ุงููุชูุฉ (Cluster)", definition: "ูุฌููุนุฉ ูู ุงูุฎูุงุฏู (ุชุณูู ุงูุนูุฏ - Nodes) ุงูุชู ูุฏูุฑูุง Kubernetes. ุชุชููู ูู ุนูุฏุฉ ุฑุฆูุณูุฉ ูุงุญุฏุฉ ุนูู ุงูุฃูู (Master Node) ูุนุฏุฉ ุนูุฏ ุนุงููุฉ (Worker Nodes)." },
                    { term: "ุงูุนูุฏุฉ (Node)", definition: "ูู ุฎุงุฏู (ุฅูุง ุขูุฉ ุงูุชุฑุงุถูุฉ ุฃู ูุงุฏูุฉ) ูู ุงููุชูุฉ. ุงูุนูุฏ ุงูุนุงููุฉ ูู ุงูุชู ุชููู ุจุชุดุบูู ุงูุญุงููุงุช ุงูุฎุงุตุฉ ุจู." },
                    { term: "ุงูุญุฌุฑุฉ (Pod)", definition: "ุฃุตุบุฑ ูุญุฏุฉ ูุงุจูุฉ ูููุดุฑ ูู Kubernetes. ุงูุญุฌุฑุฉ ูู ุบูุงู ุญูู ุญุงููุฉ ูุงุญุฏุฉ ุฃู ุฃูุซุฑ. ุชุดุชุฑู ุงูุญุงููุงุช ุฏุงุฎู ููุณ ุงูุญุฌุฑุฉ ูู ููุณ ูุณุงุญุฉ ุงูุดุจูุฉ ููุญุฏุงุช ุงูุชุฎุฒูู." },
                    { term: "ุงููุดุฑ (Deployment)", definition: "ูุตู ุงูุญุงูุฉ ุงููุฑุบูุจุฉ ูุชุทุจููู. ูุฎุจุฑ Kubernetes ุจุงูุตูุฑุฉ ุงูุชู ูุฌุจ ุงุณุชุฎุฏุงููุง ูุนุฏุฏ ุงููุณุฎ (replicas) ุงูุชู ูุฌุจ ุชุดุบูููุง. ุฅุฐุง ูุดูุช ุญุฌุฑุฉุ ูุฅู ูุญุฏุฉ ุงูุชุญูู ูู ุงููุดุฑ (Deployment Controller) ุณุชูุดุฆ ุชููุงุฆููุง ุญุฌุฑุฉ ุฌุฏูุฏุฉ ูุชุญู ูุญููุง (ุงูุดูุงุก ุงูุฐุงุชู - self-healing)." },
                    { term: "ุงูุฎุฏูุฉ (Service)", definition: "ุชููุฑ ููุทุฉ ููุงูุฉ ุดุจูุฉ ุซุงุจุชุฉ ููุณุชูุฑุฉ ููุฌููุนุฉ ูู ุงูุญุฌุฑุงุช. ูุธุฑูุง ูุฃู ุงูุญุฌุฑุงุช ูููู ุฃู ุชููุช ูุชูุณุชุจุฏู (ูุชุญุตู ุนูู ุนูุงููู IP ุฌุฏูุฏุฉ)ุ ูุฅู ุงูุฎุฏูุฉ ุชููุฑ ุนููุงู IP ุซุงุจุชูุง ูุงุณู DNS ูููู ููุชุทุจููุงุช ุงูุฃุฎุฑู ุงูุงุนุชูุงุฏ ุนููู ููุงุชุตุงู ุจุงูุญุฌุฑุงุช." }
                ]},
              ]
            },
            {
              id: "p6_c4_s3",
              icon: "๐ป",
              title: "ุงููุณุชูู 142: ุฅุนุฏุงุฏ ุจูุฆุฉ Kubernetes ูุญููุฉ (Minikube, Kind)",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุฅุนุฏุงุฏ ูุชูุฉ Kubernetes ูุงููุฉ ููุฅูุชุงุฌ ุฃูุฑ ูุนูุฏ. ูุญุณู ุงูุญุธุ ููุงู ุฃุฏูุงุช ุฑุงุฆุนุฉ ูุฅูุดุงุก ูุชู Kubernetes ุจุนูุฏุฉ ูุงุญุฏุฉ ุนูู ุฌูุงุฒู ุงููุญูู ููุชุทููุฑ ูุงูุชุฌุฑุจุฉ." },
                { type: ContentType.DEFINITION_LIST, definitionItems: [
                    { term: "Minikube", definition: "ุงูุฃุฏุงุฉ ุงูููุงุณูููุฉ. ุชููู ุจุชุดุบูู ูุชูุฉ K8s ุฏุงุฎู ุขูุฉ ุงูุชุฑุงุถูุฉ ุนูู ุฌูุงุฒู." },
                    { term: "Kind (Kubernetes in Docker)", definition: "ููุฌ ุฃุญุฏุซ. ูุณุชุฎุฏู ุญุงููุงุช Docker ูู 'ุนูุฏ' Kubernetes. ุฅูู ุฃุณุฑุน ูู ุงูุจุฏุก ูุฃุฎู ุนูู ุงูููุงุฑุฏ." }
                ]},
                { type: ContentType.PARAGRAPH, text: "ุจุงูุฅุถุงูุฉ ุฅูู ุฃุฏุงุฉ ุงููุชูุฉุ ุณุชุญุชุงุฌ ุฅูู `kubectl`ุ ููู ุฃุฏุงุฉ ุณุทุฑ ุงูุฃูุงูุฑ ุงูุฑุฆูุณูุฉ ููุชูุงุนู ูุน ุฃู ูุชูุฉ Kubernetes." },
              ]
            },
            {
              id: "p6_c4_s4",
              icon: "๐",
              title: "ุงููุณุชูู 143: ูุดุฑ ุฃูู ุชุทุจูู ุนูู Kubernetes ุจุงุณุชุฎุฏุงู kubectl",
              content: [
                { type: ContentType.PARAGRAPH, text: "ูู Kubernetesุ ูู ุดูุก ูุชู ุชุนุฑููู ุจุดูู ุชุตุฑูุญู ุจุงุณุชุฎุฏุงู ูููุงุช YAML. ุฃูุช ุชุตู 'ูุงุฐุง' ุชุฑูุฏุ ู Kubernetes ููุชุดู 'ููู' ูุฌุนูู ุญูููุฉ." },
                { type: ContentType.HEADING4, text: "ููู ุงููุดุฑ (deployment.yaml)" },
                { type: ContentType.CODE_BLOCK, language: "yaml", code: `apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-nginx
  template:
    metadata:
      labels:
        app: my-nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - containerPort: 80` },
                { type: ContentType.HEADING4, text: "ููู ุงูุฎุฏูุฉ (service.yaml)" },
                { type: ContentType.CODE_BLOCK, language: "yaml", code: `apiVersion: v1
kind: Service
metadata:
  name: my-nginx-service
spec:
  selector:
    app: my-nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer` },
                { type: ContentType.PARAGRAPH, text: "ูุชุทุจูู ูุฐูุ ุชููู ุจุชุดุบูู:" },
                { type: ContentType.CODE_BLOCK, language: "bash", code: `kubectl apply -f deployment.yaml
kubectl apply -f service.yaml` },
              ]
            },
            {
              id: "p6_c4_s5",
              icon: "๐",
              title: "ุงููุณุชูู 144: ูุญุต ูุฅุฏุงุฑุฉ ุงูููุงุฑุฏ ูู Kubernetes",
              content: [
                { type: ContentType.PARAGRAPH, text: "`kubectl` ูู ุณููู ุงูุฌูุด ุงูุณููุณุฑู ุงูุฎุงุต ุจู ููุชูุงุนู ูุน ุงููุชูุฉ." },
                { type: ContentType.DEFINITION_LIST, definitionItems: [
                    { term: "kubectl get pods", definition: "ูุณุฑุฏ ุฌููุน ุงูุญุฌุฑุงุช ููุฏ ุงูุชุดุบูู. ูุฌุจ ุฃู ุชุฑู 3 ุญุฌุฑุงุช nginx." },
                    { term: "kubectl get services", definition: "ูุณุฑุฏ ุฌููุน ุงูุฎุฏูุงุช. ุงุจุญุซ ุนู `my-nginx-service` ูุนููุงู IP ุงูุฎุงุฑุฌู ุงูุฎุงุต ุจู." },
                    { term: "kubectl describe pod <pod-name>", definition: "ูุนุทู ูุนูููุงุช ููุตูุฉ ููุบุงูุฉ ุญูู ุญุฌุฑุฉ ูุนููุฉุ ุจูุง ูู ุฐูู ุงูุฃุญุฏุงุซุ ููู ุฃูุฑ ุฑุงุฆุน ูุชุตุญูุญ ุงูุฃุฎุทุงุก." },
                    { term: "kubectl logs <pod-name>", definition: "ูุนุฑุถ ุณุฌูุงุช ุญุงููุฉ ุฏุงุฎู ุญุฌุฑุฉ." },
                    { term: "kubectl delete -f deployment.yaml", definition: "ูุญุฐู ุงูููุงุฑุฏ ุงูุชู ุชู ุฅูุดุงุคูุง ุจูุงุณุทุฉ ููู." }
                ]},
              ]
            }
        ]
    },
    {
        id: "p6_c5", chapterTitle: "ุงููุตู ุงูุฎุงูุณ: ุฃูุงู ุงูุญุงููุงุช",
        sections: [
            {
              id: "p6_c5_s1",
              icon: "๐ก๏ธ",
              title: "ุงููุณุชูู 145: ุฃูุถู ููุงุฑุณุงุช ุฃูุงู Dockerfile",
              content: [
                { type: ContentType.PARAGRAPH, text: "ูุจุฏุฃ ุฃูุงู ุงูุญุงููุงุช ุจู `Dockerfile` ุงูุฎุงุต ุจู. ุจูุงุก ุตูุฑุฉ ุขููุฉ ูููู ุจุดูู ูุจูุฑ ูู ุณุทุญ ุงููุฌูู ูุชุทุจููู." },
                { type: ContentType.LIST_UNORDERED, items: [
                    "<strong>ุงุณุชุฎุฏู ุตูุฑูุง ุฃุณุงุณูุฉ ุตุบูุฑุฉ ูููุซููุฉ:</strong> ุงุจุฏุฃ ุฏุงุฆููุง ุจุตูุฑุฉ ุฑุณููุฉ. ุตูุฑ `alpine` ุฃู `slim` ููุชุงุฒุฉ ูุฃููุง ุชุญุชูู ุนูู ุนุฏุฏ ุฃูู ูู ุงูุญุฒูุ ููุง ูุนูู ุนุฏุฏูุง ุฃูู ูู ุงูุซุบุฑุงุช ุงููุญุชููุฉ.",
                    "<strong>ูุง ุชูู ุจุชุดุบูู ุงูุนูููุงุช ูู `root`:</strong> ูุฐู ูู ุงููุงุนุฏุฉ ุงูุฃูุซุฑ ุฃูููุฉ. ุจุดูู ุงูุชุฑุงุถูุ ุชุนูู ุงูุนูููุงุช ุฏุงุฎู ุงูุญุงููุฉ ููุณุชุฎุฏู `root`. ุฅุฐุง ุชููู ุงูููุงุฌู ูู ุงููุฑูุจ ูู ุงูุญุงููุฉุ ูุณูููู ูุฏูู ูุตูู `root` ุฅูู ุงููุถูู. ุงุณุชุฎุฏู ุฏุงุฆููุง ุชุนูููุฉ `USER` ููุชุจุฏูู ุฅูู ูุณุชุฎุฏู ุบูุฑ ูููุฒ.",
                    "<strong>ุงุณุชุฎุฏู ุงูุจูุงุก ูุชุนุฏุฏ ุงููุฑุงุญู:</strong> ููุง ุชุนูููุงุ ูุฐุง ูุถูู ุฃู ุตูุฑุฉ ุงูุฅูุชุงุฌ ุงูููุงุฆูุฉ ูุง ุชุญุชูู ุนูู ุฃู ุฃุฏูุงุช ุจูุงุก ุฃู ุงุนุชูุงุฏูุงุช ุชุทููุฑ ุฃู ููุฏ ูุตุฏุฑ.",
                    "<strong>ูุง ุชูู ุจุชุถููู ุงูุฃุณุฑุงุฑ:</strong> ูุง ุชูู ุฃุจุฏูุง ุจูุณุฎ ููุงุชูุญ API ุฃู ูููุงุช ุงููุฑูุฑ ุฃู ููุงุชูุญ SSH ุงูุฎุงุตุฉ ุฅูู ุตูุฑุชู."
                ]},
              ]
            },
            {
              id: "p6_c5_s2",
              icon: "๐",
              title: "ุงููุณุชูู 146: ูุญุต ุงูุตูุฑ ุจุญุซูุง ุนู ุงูุซุบุฑุงุช ุจุงุณุชุฎุฏุงู Trivy",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุญุชู ุนูุฏ ุงุณุชุฎุฏุงู ุงูุตูุฑ ุงูุฃุณุงุณูุฉ ุงูุฑุณููุฉุ ูุฏ ุชุญุชูู ุงูุญุฒู ุงูุชู ุชุซุจุชูุง ุนูู ุซุบุฑุงุช ุฃูููุฉ ูุนุฑููุฉ (CVEs). ุฃุฏูุงุช ูุญุต ุงูุตูุฑ ุชููู ุจุชุญููู ุทุจูุงุช ุตูุฑุชู ูููุงุฑูุฉ ูุงุฆูุฉ ุงูุญุฒู ุจููุงุนุฏ ุจูุงูุงุช ุงูุซุบุฑุงุช." },
                { type: ContentType.PARAGRAPH, text: "Trivy ูู ุฃุฏุงุฉ ูุญุต ุซุบุฑุงุช ููุชูุญุฉ ุงููุตุฏุฑ ูุดุงุฆุนุฉ ูุณููุฉ ุงูุงุณุชุฎุฏุงู." },
                { type: ContentType.CODE_EXPLANATION, language: "bash", codeTitle: "ูุญุต ุตูุฑุฉ ุจุงุณุชุฎุฏุงู Trivy", code: `# ูู ุจุชุซุจูุช Trivy ...
# ุงูุญุต ุตูุฑุฉ
trivy image my-app:latest`, explanations: [
                    { lines: "3", explanation: "ุณูููู Trivy ุจุชูุฒูู ูุงุนุฏุฉ ุจูุงูุงุช ุงูุซุบุฑุงุช ููุญุต ุงูุตูุฑุฉ. ุณูุนุทูู ุชูุฑูุฑูุง ููุตูุงู ุนู ุฃู ุซุบุฑุงุช ุชู ุงูุนุซูุฑ ุนูููุงุ ูุดุฏุชูุงุ ูุงูุฅุตุฏุงุฑ ุงูุฐู ุชู ููู ุฅุตูุงุญูุง." }
                ]},
                { type: ContentType.PARAGRAPH, text: "ูุฌุจ ุฃู ูููู ูุญุต ุงูุตูุฑ ุฎุทูุฉ ุฅูุฒุงููุฉ ูู ุฎุท ุฃูุงุจูุจ CI/CD ุงูุฎุงุต ุจู. ููููู ุชูููู ุฎุท ุงูุฃูุงุจูุจ ูููุดู ุฅุฐุง ุชู ุงูุนุซูุฑ ุนูู ุฃู ุซุบุฑุงุช ุญุฑุฌุฉ." },
              ]
            },
            {
              id: "p6_c5_s3",
              icon: "๐ค",
              title: "ุงููุณุชูู 147: ุชุดุบูู ุงูุญุงููุงุช ููุณุชุฎุฏู ุบูุฑ ุฌุฐุฑู",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุฏุนูุง ูุชุนูู ูู ููููุฉ ุชูููุฐ ุงูุชุดุบูู ููุณุชุฎุฏู ุบูุฑ ุฌุฐุฑู ูู `Dockerfile`." },
                { type: ContentType.CODE_EXPLANATION, language: "dockerfile", codeTitle: "Dockerfile ูุน ูุณุชุฎุฏู ุบูุฑ ุฌุฐุฑู", code: `FROM node:18-alpine

# ูู ุจุฅูุดุงุก ูุณุชุฎุฏู ููุฌููุนุฉ ูุธุงู ูุฎุตุตูู
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

WORKDIR /usr/src/app
COPY package*.json ./
RUN npm ci --only=production

COPY . .

# ูู ุจุชุบููุฑ ููููุฉ ูููุงุช ุงูุชุทุจูู
RUN chown -R appuser:appgroup /usr/src/app

# ุจุฏูู ุฅูู ุงููุณุชุฎุฏู ุบูุฑ ุงูุฌุฐุฑู
USER appuser

EXPOSE 3000
CMD [ "node", "index.js" ]`, explanations: [
                    { lines: "4", explanation: "ูููู ุจุฅูุดุงุก ูุฌููุนุฉ ููุณุชุฎุฏู ูุธุงู ุฌุฏูุฏูู (`-S`)." },
                    { lines: "13", explanation: "ุจุนุฏ ูุณุฎ ูููุงุชูุงุ ูููู ุจุชุบููุฑ ููููุชูุง ุฅูู ุงููุณุชุฎุฏู ุงูุฌุฏูุฏ." },
                    { lines: "16", explanation: "ูุฐู ูู ุงูุฎุทูุฉ ุงูุญุงุณูุฉ. ุฃู ุชุนูููุงุช ูุงุญูุฉ (`CMD`, `ENTRYPOINT`) ุณูุชู ุชุดุบูููุง ููุณุชุฎุฏู `appuser`ุ ูููุณ `root`." }
                ]},
              ]
            },
            {
              id: "p6_c5_s4",
              icon: "๐ก๏ธ",
              title: "ุงููุณุชูู 148: ููู ุณูุงูุงุช ุงูุฃูุงู ูู Kubernetes",
              content: [
                { type: ContentType.PARAGRAPH, text: "ูููุฑ Kubernetes ุขููุงุช ูููุฉ ููุฑุถ ูููุฏ ุงูุฃูุงู ุนูู ุงูุญุฌุฑุงุช ูุงูุญุงููุงุช ุนูู ูุณุชูู ุงููุชูุฉ. `SecurityContext` ูู ุญูู ูู ููู YAML ุงูุฎุงุต ุจุงููุดุฑ ุฃู ุงูุญุฌุฑุฉ ูุณูุญ ูู ุจุชุญุฏูุฏ ุฅุนุฏุงุฏุงุช ุงูุงูุชูุงุฒุงุช ูุงูุชุญูู ูู ุงููุตูู." },
                { type: ContentType.CODE_BLOCK, language: "yaml", code: `apiVersion: v1
kind: Pod
metadata:
  name: security-context-demo
spec:
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
  containers:
  - name: sec-ctx-demo
    image: busybox
    securityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
        - "ALL"
` },
                { type: ContentType.DEFINITION_LIST, definitionItems: [
                    { term: "runAsUser / runAsGroup", definition: "ููุฑุถ ุชุดุบูู ุงูุนูููุงุช ุฏุงุฎู ุงูุญุงููุฉ ุจูุนุฑู ูุณุชุฎุฏู ููุฌููุนุฉ ูุญุฏุฏูู." },
                    { term: "runAsNonRoot: true", definition: "ูููุน ุจุฏุก ุงูุญุงููุฉ ุฅุฐุง ูุงูุช ุณุชุญุงูู ุงูุนูู ูู `root`." },
                    { term: "allowPrivilegeEscalation: false", definition: "ูููุน ุงูุนูููุฉ ูู ุงูุชุณุงุจ ุงูุชูุงุฒุงุช ุฃูุซุฑ ูู ุนูููุชูุง ุงูุฃู." },
                    { term: "readOnlyRootFilesystem: true", definition: "ูุฌุนู ูุธุงู ูููุงุช ุงูุญุงููุฉ ูููุฑุงุกุฉ ููุทุ ููู ููุงุฑุณุฉ ุฃูุงู ููุชุงุฒุฉ." }
                ]},
              ]
            },
            {
              id: "p6_c5_s5",
              icon: "๐",
              title: "ุงููุณุชูู 149: ููุฏูุฉ ุฅูู ุณูุงุณุงุช ุดุจูุฉ Kubernetes",
              content: [
                { type: ContentType.PARAGRAPH, text: "ุจุดูู ุงูุชุฑุงุถูุ ูู Kubernetesุ ุชููู ุงูุดุจูุฉ 'ูุณุทุญุฉ'. ูููู ูุฃู ุญุฌุฑุฉ ุงูุชุญุฏุซ ูุน ุฃู ุญุฌุฑุฉ ุฃุฎุฑู. ูุฐุง ููุณ ูุซุงูููุง ููุฃูุงู. ุณูุงุณุงุช ุงูุดุจูุฉ (Network Policies) ูู ูุซู ุฌุฏุงุฑ ุญูุงูุฉ ููุญุฌุฑุงุช. ุฅููุง ุชุณูุญ ูู ุจุชุญุฏูุฏ ููุงุนุฏ ุฏูููุฉ ุญูู ุญุฑูุฉ ุงููุฑูุฑ ุงููุณููุญ ุจูุง ูู ูุฅูู ุงูุญุฌุฑุงุช." },
                { type: ContentType.PARAGRAPH, text: "ุนูู ุณุจูู ุงููุซุงูุ ููููู ุฅูุดุงุก ุณูุงุณุฉ ุชููู: 'ุงุณูุญ ููุท ููุญุฌุฑุงุช ุงูุชู ุชุญูู ุงูุชุณููุฉ `app=frontend` ุจุงูุงุชุตุงู ุจุงูุญุฌุฑุงุช ุงูุชู ุชุญูู ุงูุชุณููุฉ `app=backend` ุนูู ุงููููุฐ 5000'." },
                {
                  type: ContentType.CODE_BLOCK, language: "yaml", code: `apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend-policy
spec:
  podSelector:
    matchLabels:
      app: backend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - protocol: TCP
      port: 5000`
                },
                { type: ContentType.PARAGRAPH, text: "ุณูุงุณุงุช ุงูุดุจูุฉ ุถุฑูุฑูุฉ ูุชูููุฐ ูุจุฏุฃ 'ุฃูู ุงูุงูุชูุงุฒุงุช' ุนูู ูุณุชูู ุงูุดุจูุฉ ูุฅูุดุงุก ุจููุฉ ุชุญุชูุฉ ุขููุฉ ุจุชุฌุฒุฆุฉ ุฏูููุฉ." },
              ]
            }
        ]
    }
  ]
};
